name: CI
on: push
jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12.x']

    steps:
      - uses: actions/checkout@v2

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # cache node_modules in our monorepo project instead of caching the yarn cache
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Install project dependencies, test and build
      - name: Install dependencies
        run: yarn --frozen-lockfile

      # Install project dependencies, test and build
      - name: Install dependencies
        run: yarn --cwd ./frontend --frozen-lockfile
      - name: Run build
        run: yarn --cwd ./frontend --frozen-lockfile build --prod

      # Install project dependencies, test and build
      - name: Install dependencies
        run: yarn --cwd ./server

      # Install project dependencies, test and build
      - name: Install dependencies
        run: yarn --cwd ./server test