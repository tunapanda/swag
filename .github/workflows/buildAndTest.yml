name: CI
on: push
jobs:

  # buildAndTest:
  #   name: CI Pipeline
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: ['12.x']

  #   steps:
  #     - uses: actions/checkout@v2

  #     # cache node_modules in our monorepo project instead of caching the yarn cache
  #     - uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

  #     # Initialize Node.js
  #     - name: Install Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     # Wikonnect root install dependencies
  #     - name: Wikonnect root install dependencies
  #       run: yarn --frozen-lockfile

  #     # Frontend install dependencies
  #     - name: Frontend install dependencies
  #       run: yarn --frozen-lockfile --cwd ./frontend

  #     # Frontend run build
  #     - name: Frontend run build
  #       run: yarn --cwd ./frontend build --prod

  #     # Frontend lint Ember JS
  #     - name: Frontend lint Ember JS
  #       run: yarn --cwd ./frontend lint:js

  test:

    name: Server-side Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12.x']

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    # needs: buildAndTest
    steps:
      - uses: actions/checkout@v2

      # Backend install dependencies
      - name: Backend install dependencies
        run: yarn --frozen-lockfile --cwd ./server

      # Backend migrate database nad seed
      - name: Backend database set-up
        run: cd server;$(yarn bin)/knex migrate:latest; $(yarn bin)/knex seed:run; cd ../
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          NODE_ENV: action

      # Install project dependencies, test and build
      - name: Backend testing
        run: yarn --cwd ./server test